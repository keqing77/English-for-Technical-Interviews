{"expires":1697303078230,"value":{"code":200,"headers":{"etag":"W/\"TPQXRzpRc2\"","last-modified":"Sat, 14 Oct 2023 17:04:37 GMT"},"body":[{"id":"content:0.index.md","path":"/","dir":"","title":"English-for-Technical-Interviews","description":"","keywords":[],"body":"    English-for-Technical-Interviews   Write pages in markdown, use Vue components and enjoy the power of Nuxt with a blazing fast developer experience."},{"id":"content:02-two sum.md","path":"/02-two-sum","dir":"","title":"02 Two Sum","description":"","keywords":["Resources","Vocabulary","Script"],"body":"  Resources   https://www.bilibili.com/video/BV11h4y1P7Yp/?spm_id_from=333.999.0.0  视频链接   https://leetcode.cn/problems/two-sum/  题目链接   https://www.collinsdictionary.com/dictionary/  我喜欢的英文在线字典  Vocabulary     英文  中文  音标  重要程度    brute force method  暴力法  bruːt fɔːʳs  🌟🌟🌟🌟🌟   time complexity  时间复杂度  kəmpleksɪti  🌟🌟🌟🌟🌟   n squared  n的平方  skweəʳd  🌟🌟🌟🌟🌟   length  长度   🌟🌟🌟🌟🌟   array  数组  əreɪ  🌟🌟🌟🌟🌟   element  元素  elɪmənt  🌟🌟🌟🌟🌟   store  存储   🌟🌟🌟🌟🌟   key-value pair  键值对   🌟🌟🌟🌟🌟   iterate over / go through this array  遍历这个数组  ɪtəˌreɪt  🌟🌟🌟🌟🌟   sum up to  总和为   🌟🌟🌟🌟🌟   add / plus  加上   🌟🌟🌟🌟🌟   index / indices  索引 （单/复）   🌟🌟🌟🌟🌟   declare a variable  声明一个变量  dɪkleəʳ  🌟🌟🌟🌟🌟   is equal to / equals  等于  iːkwəl  🌟🌟🌟🌟🌟   minus  减去  maɪnəs  🌟🌟🌟🌟🌟   combination  组合  kɒmbɪneɪʃən  🌟🌟🌟   Repeat the same steps  重复同样的步骤   🌟🌟🌟   In this case  在这种情况下   🌟🌟🌟   by default  默认  dɪfɔːlt  🌟🌟🌟   find out  发现   🌟🌟   difference  差值   🌟🌟   move on to  移动到   🌟🌟  Script  Explain How to Use Brute Force  We have two solutions here. The first one is using brute force method\nwhich has the time complexity: n squared. The solution is that we check out every combination of 2 values and see if they can sum up to our targeting value\nwhich is 8. For example, if we start at 3 then we check every combination\nthat includes 3\nand see if any of the numbers added to 3\nso their sum is the target. In this case none of them works.\nSo we start from 2\nrepeat the same steps,\nand we found out the combination of 2 and 6\ntheir sum is exactly 8.\nSo we can just directly return their indices\nwhich is 1 and 3.  Explain Brute Force Code  OK for this brutal force method,\nthe code goes here.\nSo firstly we are going to declare a variable called n,\nwhich represents the length of the nums array.\nSo as we're gonna check out\nevery combination of two elements from this array,\nso we're gonna use a nested for loop to do so.\nInside we have every combination and we will check\nif the sum of these two elements is equal to a target. If so\nthen\nwe can just directly return the two indices of these numbers\nand if not at the end of the program\nwe will just return an empty array by default.  Explain How to Use HashMap  The second solution is to use hash map\nwhich has time complexity about O(N). So\nwe're gonna use this hash map to store key-value pairs\nwhere the key is the element,\nand the value is the index of this element.\nThen we iterate over this array from the first element 3.\nBecause now\nwe are looking for 5 as 3 plus 5 equals 8,\nso we will try to check if the map has already\nstored five inside.\nUnfortunately no,\nso we store the current\nelement and it is index in the map for future usage.  Now we can move on to the next element 2\nas the difference between the\ntarget 8 and the current element 2 is 6.\nBut the map doesn't have it, so we still\nstore the element and its index.  Move on to 1. Same thing happened we still need to\nstore the one and its index.  But things are different for six,\nas now we're looking for\n8 minus 6 equals 2 and the map has 2 inside.\nSo we can use map\nget to get its index, and now we just returned 1 and 3.  Explain HashMap Code  If we want to use hash map,\nthen basically we need to declare a map,\nwhere the key\nis an integer representing for the element and value is the index.\nWe iterates over the array, and for each element,\nwe gonna calculate\nthe difference between the target and the current element.\nWe're gonna check\nif the difference value word exists in this map or not.\nIf so, then\nalso we just directly return the two indices.\nIf not we simply put the element and it's\nindex in the map.  At the end of the program\nwe need to return an empty array by default"},{"id":"content:03 - Spoken English.md","path":"/03-spoken-english","dir":"","title":"03   Spoken English","description":"","keywords":["Resources","连读 & 表达"],"body":"  Resources  发音 & 音标   https://www.bilibili.com/video/BV1Gs41127iG/?spm_id_from=333.337.search-card.all.click&vd_source=1b467c44a301cea703059eb872a93c8d  BBC发音教程全集   https://www.bilibili.com/video/BV1ma4y1L7NE/?spm_id_from=333.337.search-card.all.click&vd_source=1b467c44a301cea703059eb872a93c8d  BBC六分钟英语第一季合辑  连读 & 表达   https://www.bilibili.com/video/BV1D7411n7bS/?spm_id_from=333.337.top_right_bar_window_default_collection.content.click&vd_source=1b467c44a301cea703059eb872a93c8d  BBC经典教程 | 连读 | 语音语调全集  老友记，优酷或者腾讯视频  在线真人口语练习网站   https://www.free4talk.com/  可以选择不同的口语level的聊天室，免费"},{"id":"content:04 - reverse list.md","path":"/04-reverse-list","dir":"","title":"04   Reverse List","description":"","keywords":["Resources","Vocabulary","Script"],"body":"  Resources   https://www.bilibili.com/video/BV11h4y1P7Yp/?spm_id_from=333.999.0.0  视频链接   https://leetcode.cn/problems/reverse-linked-list/  题目链接   https://www.collinsdictionary.com/dictionary/  我喜欢的英文在线字典  Vocabulary     英文  中文  音标  重要程度    plenty of  很多  plenti  🌟🌟🌟🌟🌟   head node  头节点  hed noʊd  🌟🌟🌟🌟🌟   tail node  尾节点  teɪl  🌟🌟🌟🌟🌟   pointer  指针  pɔɪntəʳ  🌟🌟🌟🌟🌟   points to  指向   🌟🌟🌟🌟🌟   push / add  推入（栈中）   🌟🌟🌟🌟🌟   pop out  拿出（栈中）   🌟🌟🌟🌟🌟   reverse  反转  rɪvɜːʳs  🌟🌟🌟🌟🌟   iterate over / go through this linked list  遍历这个链表  ɪtəˌreɪt  🌟🌟🌟🌟🌟   recursive method  递归法  rɪˈkɜrsɪv  🌟🌟🌟🌟🌟   iterative method  迭代法  ˈɪtərətɪv  🌟🌟🌟🌟🌟   singly linked list  单向链表   🌟🌟🌟🌟🌟   doubly linked list  双向链表   🌟🌟🌟🌟🌟   cycle  循环，圈  saɪkəl  🌟🌟🌟🌟🌟   otherwise  否则  ʌðəʳwaɪz  🌟🌟🌟🌟🌟   original  原来的，原本的  ərɪdʒɪnəl  🌟🌟🌟🌟   in the normal case  一般情况下   🌟🌟🌟🌟   the rest of ...  xx的剩余部分   🌟🌟🌟🌟   meanwhile ...  同时  miːnhwaɪl  🌟🌟🌟🌟   reaches the end of the linked list ...  来到了链表的结尾   🌟🌟🌟🌟   eventually  / finally  最终  ɪventʃuəli  🌟🌟🌟   a key takeaway  一个关键要点   🌟🌟🌟   accordingly  有根据地   🌟🌟🌟   eliminate  消除  ɪlɪmɪneɪt  🌟🌟🌟   repeat over and over again until...  一直重复，直到...   🌟🌟🌟  Script"},{"id":"content:05 - resume.md","path":"/05-resume","dir":"","title":"05   Resume","description":"","keywords":["Vocabulary"],"body":"  Vocabulary     英文  中文  音标    design  设计  dɪzaɪn   implement  实现  ɪmplɪment   build / establish  搭建  bɪld /   ɪstæblɪʃ   develop  实现  dɪveləp   reduce / decrease  降低，减少  dɪkriːs   enhance / increase  提高，增加  ɪnhɑːns   / ɪnkriːs   improve  提升，完善  ɪmpruːv   optimize  优化  ɒptɪmaɪz   significantly / greatly  极大地  sɪgnɪfɪkənt /     greɪtli   automate, automated  自动化  ɔːtəmeɪt   result in  导致...的结果  ɪtəˌreɪt   user experience  用户体验  juːzəʳ    ɪkspɪəriəns   independently  独立地  ɪndɪpendənt   seamless  无缝的  siːmləs   accelerate / facilitate  加速，帮助  ækseləreɪt /  fəsɪlɪteɪt   robust  鲁棒性强的  roʊbʌst   stable  稳定的  steɪbəl   reliable  可靠的  rɪlaɪəbəl   extensible / scalable  可扩展的  ɪkˈstɛnsəbəl /   skeɪləbəl   standardized  标准的  stændəʳdaɪz   consistent  一致性的  kənsɪstənt   persistent  持久性的  pəʳsɪstənt   effective  有效的  ɪfektɪv   efficient  有效率的  ɪfɪʃənt   isolated  隔离的，独立的  aɪsəleɪtɪd   standalone  独立的    reusable  可重复利用的  riːjuːzəbəl   portable  便捷的  pɔːʳtəbəl   integrate, integrated  集成  ɪntɪgreɪt   development lifecycle  开发周期    metrics  指标  ˈmɛtrɪks   alert  告警  əlɜːʳt   monitoring system  监控系统  ˈmɒnɪtərɪŋ   incident  事故  ɪnsɪdənt   deployment  部署  dɪplɔɪmənt   transition  过渡  trænzɪʃən   achieve / reach  达到，达成  ətʃiːv   / riːtʃ   allow/enable users to do sth.  允许用户做某事    cross-platform  跨平台的  ɪlɪmɪneɪt   platform  平台  plætfɔːʳm   in production  在生产环境中  prədʌkʃən   maintain  维护  meɪnteɪn   own  负责，拥有  oʊn   capability  能力  capability   end-to-end  端到端的    manual efforts  手动工作  mænjuəl   efəʳts   introduce  引入（框架，工具等）  ɪntrədjuːs   customized  自定义的  kʌstəˌmaɪzd"}]},"mtime":1697303077235,"integrity":"pRFvDwrHwi"}